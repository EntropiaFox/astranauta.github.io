{
	"$schema": "http://json-schema.org/draft-07/schema#",
	"$id": "spells.json",
	"version": "1.7.8",
	"title": "Spells",
	"type": "object",

	"definitions": {
		"spellData": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"level": {
					"type": "integer"
				},
				"school": {
					"type": "string",
					"$$ifSiteElse_key": {
						"keySite": "enum",
						"keyBrew": "examples",
						"value": [
							"A",
							"V",
							"E",
							"I",
							"D",
							"N",
							"T",
							"C",
							"P"
						]
					}
				},
				"$$ifBrew": {
					"subschools": {
						"description": "For homebrew use only.",
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"fluff": {
						"description": "This is intended to be used for Homebrew only - site data should include a fluff file per source",
						"$ref": "../util.json#/definitions/fluffObject"
					},
					"roll20Spell": {
						"$ref": "roll20.json#/properties/spell"
					},
					"foundryData": {"$ref": "../util.json#/definitions/foundryDataObject"},
					"foundryFlags": {"$ref": "../util.json#/definitions/foundryFlagsObject"},
					"foundryEffects": {"$ref": "../util.json#/definitions/foundryEffectsArray"},
					"foundryImg": {"$ref": "../util.json#/definitions/foundryImg"}
				},
				"meta": {
					"type": "object",
					"properties": {
						"ritual": {
							"type": "boolean"
						},
						"technomagic": {
							"type": "boolean"
						}
					},
					"additionalProperties": false
				},
				"time": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/time"
					}
				},
				"range": {
					"type": "object",
					"properties": {
						"type": {
							"type": "string",
							"enum": [
								"special",
								"point",
								"line",
								"cube",
								"cone",
								"radius",
								"sphere",
								"hemisphere",
								"cylinder"
							]
						},
						"distance": {
							"type": "object",
							"properties": {
								"type": {
									"type": "string",
									"$$ifSiteElse_key": {
										"keySite": "enum",
										"keyBrew": "examples",
										"value": [
											"feet",
											"miles",
											"self",
											"touch",
											"unlimited",
											"plane",
											"sight"
										]
									}
								},
								"amount": {
									"type": "integer"
								},
								"$$ifBrew": {
									"typeSecondary": {
										"description": "Homebrew only",
										"type": "string",
										"examples": [
											"feet",
											"miles",
											"self",
											"touch",
											"unlimited",
											"plane",
											"sight"
										]
									},
									"amountSecondary": {
										"description": "Homebrew only",
										"type": "integer"
									}
								}
							},
							"required": [
								"type"
							],
							"additionalProperties": false
						}
					},
					"required": [
						"type"
					],
					"additionalProperties": false
				},
				"components": {
					"type": "object",
					"properties": {
						"v": {
							"type": "boolean"
						},
						"s": {
							"type": "boolean"
						},
						"m": {
							"oneOf": [
								{
									"type": "object",
									"properties": {
										"text": {
											"type": "string"
										},
										"cost": {
											"description": "In copper pieces.",
											"type": "number"
										},
										"consume": {
											"oneOf": [
												{
													"type": "boolean"
												},
												{
													"type": "string",
													"const": "optional"
												}
											]
										}
									},
									"required": [
										"text"
									],
									"additionalProperties": false

								},
								{
									"type": ["boolean", "string"]
								}
							]
						},
						"r": {
							"description": "\"Royalty\" components, as introduced in Acquisitions Incorporated",
							"type": "boolean"
						}
					},
					"additionalProperties": false
				},
				"duration": {
					"type": "array",
					"items": {"$ref": "#/definitions/duration"}
				},
				"entries": {
					"type": "array",
					"items": {
						"$ref": "../entry.json"
					}
				},
				"entriesHigherLevel": {
					"type": "array",
					"items": {
						"$ref": "../entry.json"
					}
				},
				"classes": {
					"type": "object",
					"properties": {
						"fromClassList": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/class"
							}
						},
						"fromClassListVariant": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/class"
							}
						},
						"fromSubclass": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"class": {
										"$ref": "#/definitions/class"
									},
									"subclass": {
										"type": "object",
										"properties": {
											"name": {
												"type": "string"
											},
											"source": {
												"type": "string"
											},
											"subSubclass": {
												"type": "string"
											}
										},
										"required": [
											"name",
											"source"
										],
										"additionalProperties": false
									}
								},
								"required": [
									"class",
									"subclass"
								],
								"additionalProperties": false
							}
						}
					},
					"additionalProperties": false
				},
				"races": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"name": {
								"type": "string"
							},
							"source": {
								"type": "string"
							},
							"baseName": {
								"type": "string"
							},
							"baseSource": {
								"type": "string"
							}
						},
						"required": ["name", "source"]
					}
				},
				"backgrounds": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"name": {
								"type": "string"
							},
							"source": {
								"type": "string"
							}
						},
						"required": ["name", "source"]
					}
				},
				"eldritchInvocations": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"name": {
								"type": "string"
							},
							"source": {
								"type": "string"
							}
						},
						"required": ["name", "source"]
					}
				},
				"source": {
					"type": "string"
				},
				"page": {"$ref": "../util.json#/definitions/page"},
				"additionalSources": {
					"$ref": "../util.json#/definitions/additionalSources"
				},
				"otherSources": {
					"$ref": "../util.json#/definitions/otherSources"
				},
				"damageInflict": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"$ref": "../util.json#/definitions/dataDamageType"
					}
				},
				"damageResist": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"$ref": "../util.json#/definitions/dataDamageType"
					}
				},
				"damageImmune": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"$ref": "../util.json#/definitions/dataDamageType"
					}
				},
				"damageVulnerable": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"$ref": "../util.json#/definitions/dataDamageType"
					}
				},
				"conditionInflict": {
					"$ref": "../util.json#/definitions/tagsConditions"
				},
				"conditionImmune": {
					"$ref": "../util.json#/definitions/tagsConditions"
				},
				"savingThrow": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"type": "string",
						"enum": [
							"strength", "constitution", "dexterity", "intelligence", "wisdom", "charisma"
						]
					}
				},
				"abilityCheck": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"type": "string",
						"enum": [
							"strength", "constitution", "dexterity", "intelligence", "wisdom", "charisma"
						]
					}
				},
				"spellAttack": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"type": "string",
						"description": "M: Melee\n R: Ranged\n O: Other/Unknown",
						"enum": [
							"M", "R", "O"
						]
					}
				},
				"areaTags": {
					"description": "By convention, only the effects of the spell cast at its base level are considered when populating these.\n C: Cube\n H: Hemisphere\n L: Line\n MT: Multiple Targets\n N: Cone\n Q: Square\n R: Circle\n ST: Single Target\n S: Sphere\n W: Wall\n Y: Cylinder",
					"type": "array",
					"uniqueItems": true,
					"items": {
						"type": "string",
						"enum": ["ST", "MT", "R", "N", "C","Y", "H", "L", "S", "Q", "W"]
					}
				},
				"miscTags": {
					"type": "array",
					"description": "FMV: Forced Movement\n HL: Healing\n LGT: Creates Light\n LGTS: Creates Sunlight\n MAC: Modifies AC\n PRM: Permanent Effects\n RO: Rollable Effects\n SCL: Scaling Effects\n  SMN: Summons Creature\n SGT: Requires Sight\n THP: Grants Temporary Hit Points\n TP: Teleportation",
					"uniqueItems": true,
					"items": {
						"type": "string",
						"enum": ["FMV", "HL", "LGT", "LGTS","MAC", "PRM", "RO", "SCL", "SMN", "SGT", "THP", "TP"]
					}
				},
				"affectsCreatureType": {
					"type": "array",
					"items": {
						"$ref": "../util.json#/definitions/creatureType"
					}
				},
				"srd": {
					"$ref": "../util.json#/definitions/srd"
				},
				"basicRules": {
					"$ref": "../util.json#/definitions/basicRules"
				},
				"scalingLevelDice": {
					"oneOf": [
						{
							"type": "array",
							"items": {
								"$ref": "#/definitions/scalingLevelDiceItem"
							}
						},
						{
							"$ref": "#/definitions/scalingLevelDiceItem"
						}
					]
				},
				"hasFluff": {"type": "boolean"},
				"hasFluffImages": {"type": "boolean"}
			},
			"additionalProperties": false
		},

		"spell": {
			"anyOf": [
				{
					"type": "object",
					"$$merge": [
						{
							"$ref": "#/definitions/spellData"
						},
						{
							"required": [
								"name",
								"level",
								"school",
								"time",
								"range",
								"duration",
								"entries",
								"source"
							]
						}
					]
				},
				{
					"type": "object",
					"$$merge": [
						{
							"$ref": "#/definitions/spellData"
						},
						{
							"$ref": "../util.json#/definitions/copyBlock"
						}
					]
				}
			]
		},

		"time": {
			"type": "object",
			"properties": {
				"number": {
					"type": "integer"
				},
				"unit": {
					"type": "string",
					"$$ifSiteElse_key": {
						"keySite": "enum",
						"keyBrew": "examples",
						"value": [
							"action",
							"bonus",
							"reaction",
							"round",
							"minute",
							"hour"
						]
					}
				},
				"condition": {
					"type": "string"
				}
			},
			"required": [
				"unit"
			],
			"additionalProperties": false
		},

		"duration": {
			"type": "object",
			"properties": {
				"type": {
					"type": "string",
					"enum": [
						"instant",
						"timed",
						"permanent",
						"special"
					]
				},
				"duration": {
					"type": "object",
					"properties": {
						"type": {
							"type": "string",
							"$$ifSiteElse_key": {
								"keySite": "enum",
								"keyBrew": "examples",
								"value": [
									"hour",
									"minute",
									"turn",
									"round",
									"week",
									"day",
									"year"
								]
							}
						},
						"amount": {
							"type": "integer"
						},
						"upTo": {
							"type": "boolean"
						}
					},
					"required": [
						"type"
					],
					"additionalProperties": false
				},
				"concentration": {
					"type": "boolean"
				},
				"ends": {
					"type": "array",
					"items": {
						"type": "string",
						"description": "The examples given are short forms that are automatically expanded to \"discharged\", \"dispelled\" & \"triggered\".\nHomebrew files should state custom end conditions in full.",
						"$$ifSiteElse_key": {
							"keySite": "enum",
							"keyBrew": "examples",
							"value": [
								"dispel",
								"trigger",
								"discharge"
							]
						}
					}
				},
				"condition": {
					"type": "string"
				}
			},
			"required": [
				"type"
			],
			"additionalProperties": false
		},

		"class": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"source": {
					"type": "string"
				},
				"definedInSource": {
					"type": "string"
				}
			},
			"required": [
				"name",
				"source"
			],
			"additionalProperties": false
		},

		"scalingLevelDiceItem": {
			"type": "object",
			"properties": {
				"label": {
					"type": "string"
				},
				"scaling": {
					"type": "object",
					"patternProperties": {
						"\\d+": {
							"type": "string"
						}
					},
					"additionalProperties": false
				}
			},
			"additionalProperties": false
		}
	},

	"properties": {
		"spell": {
			"type": "array",
			"items": {"$ref": "#/definitions/spell"}
		},
		"_meta": {
			"$ref": "../util.json#/definitions/metaBlock"
		}
	},
	"required": [
		"spell"
	],
	"additionalProperties": false
}

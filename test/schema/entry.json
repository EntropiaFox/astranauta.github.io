{
	"$schema": "http://json-schema.org/draft-07/schema#",
	"$id": "entry.json",
	"title": "Entry",
	"description": "A recursively renderable object.",
	"version": "1.7.0",
	"definitions": {
		"_arrayOfSpell": {
			"type": "array",
			"uniqueItems": true,
			"items": {
				"oneOf": [
					{
						"type": "string"
					},
					{
						"type": "object",
						"properties": {
							"entry": {
								"type": "string"
							},
							"hidden": {
								"type": "boolean"
							}
						},
						"required": [
							"entry",
							"hidden"
						]
					}
				]
			}
		},
		"mediaHref": {
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "internal"
						},
						"path": {
							"type": "string"
						}
					},
					"required": [
						"path"
					],
					"additionalProperties": false
				},
				{
					"type": "object",
					"properties": {
						"type": {
							"const": "external"
						},
						"url": {
							"type": "string"
						}
					},
					"required": [
						"url"
					],
					"additionalProperties": false
				}
			]
		},
		"entry": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				}
			},
			"required": [
				"type"
			]
		},
		"entrySection": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"const": "section"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"alias": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"entries": {
					"type": "array",
					"items": {
						"$ref": "#"
					}
				},
				"style": {
					"type": "string"
				}
			},
			"required": [
				"type",
				"entries"
			],
			"additionalProperties": false
		},
		"entryEntries": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"const": "entries"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"entries": {
					"type": "array",
					"items": {
						"$ref": "#"
					}
				},
				"alias": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"style": {
					"type": "string"
				}
			},
			"required": [
				"type",
				"entries"
			],
			"additionalProperties": false
		},
		"entryQuote": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"const": "quote"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"entries": {
					"type": "array",
					"items": {
						"$ref": "#"
					}
				},
				"by": {
					"type": "string"
				},
				"from": {
					"type": "string"
				},
				"skipMarks": {
					"description": "If the automatically-inserted quotation marks should be skipped.",
					"type": "boolean"
				},
				"skipItalics": {
					"type": "boolean"
				}
			},
			"required": [
				"type",
				"entries"
			],
			"additionalProperties": false
		},
		"entryInlineEntries": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"const": "inline"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"entries": {
					"type": "array",
					"items": {
						"$ref": "#"
					}
				}
			},
			"required": [
				"type",
				"entries"
			],
			"additionalProperties": false
		},
		"entryEntriesInlineEntries": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"const": "inlineBlock"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"entries": {
					"type": "array",
					"items": {
						"$ref": "#"
					}
				}
			},
			"required": [
				"type",
				"entries"
			],
			"additionalProperties": false
		},
		"entryOptions": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"const": "options"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"count": {
					"description": "Used to specify how many of the listed options can be chosen as e.g. permanent character features. Leave blank for transient choices.",
					"type": "integer"
				},
				"style": {
					"type": "string"
				},
				"entries": {
					"type": "array",
					"items": {
						"$ref": "#"
					}
				}
			},
			"required": [
				"type",
				"entries"
			],
			"additionalProperties": false
		},
		"entryTable": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"const": "table"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"caption": {
					"type": "string"
				},
				"isStriped": {
					"type": "boolean"
				},
				"isNameGenerator": {
					"type": "boolean",
					"description": "Uses the result rolled to construct a name from multiple columns, such as Prefix, Given, Family, Suffix names etc."
				},
				"style": {
					"type": "string"
				},
				"colLabels": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"colStyles": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"rowLabels": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"rowStyles": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"rows": {
					"type": "array",
					"items": {
						"anyOf": [
							{
								"type": "array",
								"items": {
									"$ref": "#"
								}
							},
							{
								"$ref": "#/definitions/entryTableRow"
							}
						]
					}
				},
				"footnotes": {
					"type": "array",
					"items": {
						"$ref": "#"
					}
				}
			},
			"required": [
				"type",
				"rows"
			],
			"additionalProperties": false
		},
		"entryTableGroup": {
			"description": "Used to group related tables together; has no effect on rendering.",
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"const": "tableGroup"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"tables": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/entryTable"
					}
				}
			},
			"required": [
				"type",
				"tables"
			],
			"additionalProperties": false
		},
		"entryTableRow": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"const": "row"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"style": {
					"type": "string"
				},
				"row": {
					"type": "array",
					"items": {
						"$ref": "#"
					}
				}
			},
			"required": [
				"type",
				"row"
			],
			"additionalProperties": false
		},
		"entryTableCell": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"const": "cell"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"width": {
					"type": "integer"
				},
				"roll": {
					"oneOf": [
						{
							"type": "object",
							"properties": {
								"min": {
									"type": "integer"
								},
								"max": {
									"type": "integer"
								},
								"pad": {
									"type": "boolean"
								}
							},
							"required": [
								"min",
								"max"
							],
							"additionalProperties": false
						},
						{
							"type": "object",
							"properties": {
								"exact": {
									"type": "integer"
								},
								"pad": {
									"type": "boolean"
								}
							},
							"required": [
								"exact"
							],
							"additionalProperties": false
						}
					]
				},
				"entry": {
					"$ref": "#"
				}
			},
			"required": [
				"type"
			],
			"additionalProperties": false
		},
		"entryList": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"const": "list"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"columns": {
					"description": "Number of columns the content should be split into. Note that the full value is only displayed on wide screens, and screens below certain widths will see an appropriately reduced number of columns.",
					"type": "integer"
				},
				"style": {
					"type": "string",
					"description": "Formatting to be applied to the list; not providing a style results in a simple bullet point list.\n list-decimal: decimal numbering 1. 2. 3. etc \n list-hang: a list with the bullets removed and a full indentation \n list-hang-notitle: a list with no bullets that indents all lines but the first\n list-lower-roman: lowercase roman numeral numbering i, ii, iii, iv, etc.\n list-name: a bulleted list with all text in bold\n list-no-bullets: a list with the bullets removed and reduced indentation",
					"enum": [
						"list-decimal",
						"list-hang",
						"list-hang-notitle",
						"list-lower-roman",
						"list-name",
						"list-no-bullets"
					]
				},
				"items": {
					"type": "array",
					"items": {
						"$ref": "#"
					}
				}
			},
			"required": [
				"type",
				"items"
			],
			"additionalProperties": false
		},
		"entryBonus": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"const": "bonus"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"value": {
					"type": "integer"
				}
			},
			"required": [
				"type",
				"value"
			],
			"additionalProperties": false
		},
		"entryBonusSpeed": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"const": "bonusSpeed"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"value": {
					"type": "integer"
				}
			},
			"required": [
				"type",
				"value"
			],
			"additionalProperties": false
		},
		"entryDice": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"const": "dice"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"toRoll": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"number": {
								"type": "integer"
							},
							"faces": {
								"type": "integer"
							},
							"modifier": {
								"description": "(Warning: unused)",
								"type": "integer"
							},
							"hideModifier": {
								"description": "(Warning: unused)",
								"type": "boolean"
							}
						},
						"required": [
							"number",
							"faces"
						]
					}
				},
				"rollable": {
					"type": "boolean"
				}
			},
			"required": [
				"type"
			],
			"additionalProperties": false
		},
		"entryAbilityDc": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"const": "abilityDc"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"attributes": {
					"type": "array",
					"items": {
						"type": "string",
						"enum": [
							"str",
							"dex",
							"con",
							"int",
							"wis",
							"cha",
							"spellcasting"
						]
					}
				}
			},
			"required": [
				"type",
				"name",
				"attributes"
			],
			"additionalProperties": false
		},
		"entryAbilityAttackMod": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"const": "abilityAttackMod"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"attributes": {
					"type": "array",
					"items": {
						"type": "string",
						"enum": [
							"str",
							"dex",
							"con",
							"int",
							"wis",
							"cha",
							"spellcasting"
						]
					}
				}
			},
			"required": [
				"type",
				"name",
				"attributes"
			],
			"additionalProperties": false
		},
		"abilityGeneric": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"const": "abilityGeneric"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"text": {
					"type": "string"
				},
				"attributes": {
					"type": "array",
					"items": {
						"type": "string",
						"enum": [
							"str",
							"dex",
							"con",
							"int",
							"wis",
							"cha"
						]
					}
				}
			},
			"required": [
				"type",
				"text"
			],
			"additionalProperties": false
		},
		"entryLink": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"const": "link"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"text": {
					"type": "string"
				},
				"href": {
					"oneOf": [
						{
							"type": "object",
							"properties": {
								"type": {
									"const": "internal"
								},
								"path": {
									"type": "string"
								},
								"hash": {
									"type": "string"
								},
								"hashPreEncoded": {
									"type": "boolean"
								},
								"subhashes": {
									"type": "array",
									"items": {
										"oneOf": [
											{
												"type": "object",
												"properties": {
													"key": {
														"type": "string"
													},
													"values": {
														"type": "array",
														"items": {
															"type": "string"
														}
													},
													"preEncoded": {
														"type": "boolean"
													}
												},
												"required": [
													"key",
													"values"
												],
												"additionalProperties": false
											},
											{
												"type": "object",
												"properties": {
													"key": {
														"type": "string"
													},
													"value": {
														"type": "string"
													},
													"preEncoded": {
														"type": "boolean"
													}
												},
												"required": [
													"key",
													"value"
												],
												"additionalProperties": false
											}
										]
									}
								},
								"hover": {
									"type": "object",
									"properties": {
										"page": {
											"$ref": "util.json#/definitions/page"
										},
										"source": {
											"type": "string"
										},
										"hash": {
											"description": "Optional; overrides the href hash for hover handlers.",
											"type": "string"
										},
										"hashPreEncoded": {
											"type": "boolean"
										}
									},
									"additionalProperties": false,
									"required": [
										"page",
										"source"
									]
								}
							},
							"required": [
								"path"
							],
							"additionalProperties": false
						},
						{
							"type": "object",
							"properties": {
								"type": {
									"const": "external"
								},
								"url": {
									"type": "string"
								}
							},
							"required": [
								"url"
							],
							"additionalProperties": false
						}
					]
				}
			},
			"required": [
				"type",
				"text",
				"href"
			],
			"additionalProperties": false
		},
		"entryOptFeature": {
			"description": "For e.g. Eldritch Invocations which require prerequisite text",
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"const": "optfeature"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"prerequisite": {
					"type": "string"
				},
				"entries": {
					"type": "array",
					"items": {
						"$ref": "#"
					}
				}
			},
			"required": [
				"type",
				"name"
			],
			"additionalProperties": false
		},
		"entryInset": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"const": "inset"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"entries": {
					"type": "array",
					"items": {
						"$ref": "#"
					}
				},
				"style": {
					"type": "string"
				}
			},
			"required": [
				"type",
				"entries"
			],
			"additionalProperties": false
		},
		"entryInsetReadaloud": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"const": "insetReadaloud"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"entries": {
					"type": "array",
					"items": {
						"$ref": "#"
					}
				},
				"style": {
					"type": "string"
				}
			},
			"required": [
				"type",
				"entries"
			],
			"additionalProperties": false
		},
		"entryVariant": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"const": "variant"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"entries": {
					"type": "array",
					"items": {
						"$ref": "#"
					}
				}
			},
			"required": [
				"type",
				"name",
				"entries"
			],
			"additionalProperties": false
		},
		"entryVariantInner": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"const": "variantInner"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"entries": {
					"type": "array",
					"items": {
						"$ref": "#"
					}
				}
			},
			"required": [
				"type",
				"name",
				"entries"
			],
			"additionalProperties": false
		},
		"entryVariantSub": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"const": "variantSub"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"entries": {
					"type": "array",
					"items": {
						"$ref": "#"
					}
				}
			},
			"required": [
				"type",
				"name",
				"entries"
			],
			"additionalProperties": false
		},
		"entryItem": {
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"name": {
							"type": "string"
						},
						"type": {
							"type": "string",
							"const": "item"
						},
						"source": {
							"type": "string"
						},
						"page": {
							"$ref": "util.json#/definitions/page"
						},
						"srd": {
							"$ref": "util.json#/definitions/srd"
						},
						"data": {
							"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
							"type": "object"
						},
						"id": {
							"type": "string"
						},
						"style": {
							"type": "string"
						},
						"entry": {
							"$ref": "#"
						},
						"nameDot": {
							"const": false
						}
					},
					"required": [
						"type",
						"name",
						"entry"
					],
					"additionalProperties": false
				},
				{
					"type": "object",
					"properties": {
						"name": {
							"type": "string"
						},
						"type": {
							"type": "string",
							"const": "item"
						},
						"source": {
							"type": "string"
						},
						"page": {
							"$ref": "util.json#/definitions/page"
						},
						"srd": {
							"$ref": "util.json#/definitions/srd"
						},
						"data": {
							"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
							"type": "object"
						},
						"id": {
							"type": "string"
						},
						"style": {
							"type": "string"
						},
						"entries": {
							"type": "array",
							"items": {
								"$ref": "#"
							}
						},
						"nameDot": {
							"const": false
						}
					},
					"required": [
						"type",
						"name",
						"entries"
					],
					"additionalProperties": false
				}
			]
		},
		"entryItemSub": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"const": "itemSub"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"entry": {
					"$ref": "#"
				},
				"nameDot": {
					"const": false
				}
			},
			"required": [
				"type",
				"name",
				"entry"
			],
			"additionalProperties": false
		},
		"entryItemSpell": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"const": "itemSpell"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"entry": {
					"$ref": "#"
				}
			},
			"required": [
				"type",
				"name",
				"entry"
			],
			"additionalProperties": false
		},
		"entryImage": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"const": "image"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"href": {
					"$ref": "#/definitions/mediaHref"
				},
				"hrefThumbnail": {
					"title": "A thumbnail image used in rare cases, e.g. when loading a wall of maps to choose from in the DM Screen.",
					"$ref": "#/definitions/mediaHref"
				},
				"title": {
					"type": "string"
				},
				"altText": {
					"description": "For accessibility purposes",
					"type": "string"
				},
				"imageType": {
					"type": "string",
					"enum": [
						"map",
						"mapPlayer"
					]
				},
				"grid": {
					"type": "object",
					"properties": {
						"type": {
							"type": "string",
							"enum": [
								"none",
								"square",
								"hexRowsOdd",
								"hexRowsEven",
								"hexColsOdd",
								"hexColsEven"
							]
						},
						"size": {
							"type": "integer"
						},
						"offsetX": {
							"type": "integer"
						},
						"offsetY": {
							"type": "integer"
						}
					},
					"additionalProperties": false
				},
				"mapRegions": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"area": {
								"type": "string"
							},
							"points": {
								"type": "array",
								"items": {
									"type": "array",
									"items": {
										"type": "integer"
									},
									"maxItems": 2,
									"minItems": 2
								},
								"uniqueItems": true
							}
						},
						"additionalProperties": false
					}
				},
				"mapParent": {
					"description": "Note that the order of transformations is: scale, then offset.",
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"offsetX": {
							"description": "The X position of this map within the parent map. Defaults to 0.",
							"type": "integer"
						},
						"offsetY": {
							"description": "The Y position of this map within the parent map. Defaults to 0.",
							"type": "integer"
						},
						"scaleX": {
							"description": "X scaling required for this map to match the parent map. Defaults to 1.",
							"type": "number",
							"exclusiveMinimum": 0
						},
						"scaleY": {
							"description": "Y scaling required for this map to match the parent map. Defaults to 1.",
							"type": "number",
							"exclusiveMinimum": 0
						},
						"autoScale": {
							"description": "If the X/Y scaling for this map should be based on the size ratio between the two. This is often used a placeholder for maps requiring future manual adjustment.",
							"type": "boolean"
						}
					},
					"additionalProperties": false
				},
				"mapName": {
					"type": "string"
				},
				"width": {
					"type": "integer"
				},
				"height": {
					"type": "integer"
				},
				"maxWidth": {
					"description": "Specify the max desired display width of the images, as opposed to \"width\" which should only be used for the _real_ width. Assumes pixels by default.",
					"type": "integer"
				},
				"maxHeight": {
					"description": "As per \"maxWidth\"",
					"type": "integer"
				},
				"maxWidthUnits": {
					"type": "string"
				},
				"maxHeightUnits": {
					"type": "string"
				},
				"style": {
					"enum": [
						"comic-speaker-left",
						"comic-speaker-right",
						"deity-symbol"
					]
				}
			},
			"required": [
				"type",
				"href"
			],
			"additionalProperties": false
		},
		"entryGallery": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"const": "gallery"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"images": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/entryImage"
					}
				}
			},
			"required": [
				"type",
				"images"
			],
			"additionalProperties": false
		},
		"entryActions": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"const": "actions"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"entries": {
					"type": "array",
					"items": {
						"$ref": "#"
					}
				}
			},
			"required": [
				"type",
				"name",
				"entries"
			],
			"additionalProperties": false
		},
		"entryAttack": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"const": "attack"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"attackType": {
					"type": "string",
					"description": "MW: Melee Weapon\n RW: Ranged Weapon",
					"enum": [
						"MW",
						"RW"
					]
				},
				"attackEntries": {
					"type": "array",
					"items": {
						"$ref": "#"
					}
				},
				"hitEntries": {
					"type": "array",
					"items": {
						"$ref": "#"
					}
				}
			},
			"required": [
				"type",
				"attackType",
				"attackEntries",
				"hitEntries"
			],
			"additionalProperties": false
		},
		"entryFlowchart": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"const": "flowchart"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"blocks": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/entry"
					}
				}
			},
			"required": [
				"type",
				"blocks"
			],
			"additionalProperties": false
		},
		"entryFlowBlock": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"const": "flowBlock"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"entries": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/entry"
					}
				}
			},
			"required": [
				"type"
			],
			"additionalProperties": false
		},
		"entryIngredient": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"const": "ingredient"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"entry": {
					"$ref": "#"
				}
			},
			"required": [
				"type",
				"entry"
			],
			"patternProperties": {
				"^amount\\d+$": {
					"type": "number"
				}
			},
			"additionalProperties": false
		},
		"entryDataCreature": {
			"type": "object",
			"properties": {
				"type": {
					"const": "dataCreature"
				},
				"dataCreature": {
					"$ref": "bestiary/bestiary.json#/definitions/creature"
				}
			},
			"required": [
				"type",
				"dataCreature"
			]
		},
		"entryDataSpell": {
			"type": "object",
			"properties": {
				"type": {
					"const": "dataSpell"
				},
				"dataSpell": {
					"$ref": "spells/spells.json#/definitions/spell"
				}
			},
			"required": [
				"type",
				"dataSpell"
			]
		},
		"entryDataTrapHazard": {
			"type": "object",
			"properties": {
				"type": {
					"const": "dataTrapHazard"
				},
				"dataTrapHazard": {
					"oneOf": [
						{
							"$ref": "trapshazards.json#/definitions/trap"
						},
						{
							"$ref": "trapshazards.json#/definitions/hazard"
						}
					]
				}
			},
			"required": [
				"type",
				"dataTrapHazard"
			]
		},
		"entryDataObject": {
			"type": "object",
			"properties": {
				"type": {
					"const": "dataObject"
				},
				"dataObject": {
					"$ref": "objects.json#/definitions/object"
				}
			},
			"required": [
				"type",
				"dataObject"
			]
		},
		"entryDataItem": {
			"type": "object",
			"properties": {
				"type": {
					"const": "dataItem"
				},
				"dataItem": {
					"$ref": "items.json#/definitions/item"
				}
			},
			"required": [
				"type",
				"dataItem"
			]
		},
		"entryRefClassFeature": {
			"description": "For use in classes page content only.",
			"type": "object",
			"properties": {
				"type": {
					"const": "refClassFeature"
				},
				"classFeature": {
					"type": "string"
				}
			},
			"required": [
				"type",
				"classFeature"
			]
		},
		"entryRefSubclassFeature": {
			"description": "For use in classes page content only.",
			"type": "object",
			"properties": {
				"type": {
					"const": "refSubclassFeature"
				},
				"subclassFeature": {
					"type": "string"
				}
			},
			"required": [
				"type",
				"subclassFeature"
			]
		},
		"entryRefOptionalfeature": {
			"description": "For use in classes page content only.",
			"type": "object",
			"properties": {
				"type": {
					"const": "refOptionalfeature"
				},
				"optionalfeature": {
					"type": "string"
				},
				"name": {
					"type": "string"
				}
			},
			"required": [
				"type",
				"optionalfeature"
			]
		},
		"entryHr": {
			"type": "object",
			"properties": {
				"type": {
					"const": "hr"
				}
			},
			"required": [
				"type"
			]
		},
		"entrySpellcasting": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"headerEntries": {
					"type": "array",
					"items": {
						"$ref": "#"
					}
				},
				"constant": {
					"$ref": "#/definitions/_arrayOfSpell"
				},
				"will": {
					"$ref": "#/definitions/_arrayOfSpell"
				},
				"ritual": {
					"$ref": "#/definitions/_arrayOfSpell"
				},
				"rest": {
					"$ref": "#/definitions/entrySpellcasting_frequency"
				},
				"daily": {
					"$ref": "#/definitions/entrySpellcasting_frequency"
				},
				"weekly": {
					"$ref": "#/definitions/entrySpellcasting_frequency"
				},
				"yearly": {
					"$ref": "#/definitions/entrySpellcasting_frequency"
				},
				"charges": {
					"$ref": "#/definitions/entrySpellcasting_frequency"
				},
				"spells": {
					"type": "object",
					"properties": {
						"0": {
							"type": "object",
							"properties": {
								"spells": {
									"type": "array",
									"uniqueItems": true,
									"items": {
										"type": "string"
									}
								}
							},
							"required": [
								"spells"
							],
							"additionalProperties": false
						},
						"1": {
							"$ref": "#/definitions/entrySpellcasting_level1to9"
						},
						"2": {
							"$ref": "#/definitions/entrySpellcasting_level1to9"
						},
						"3": {
							"$ref": "#/definitions/entrySpellcasting_level1to9"
						},
						"4": {
							"$ref": "#/definitions/entrySpellcasting_level1to9"
						},
						"5": {
							"$ref": "#/definitions/entrySpellcasting_level1to9"
						},
						"6": {
							"$ref": "#/definitions/entrySpellcasting_level1to9"
						},
						"7": {
							"$ref": "#/definitions/entrySpellcasting_level1to9"
						},
						"8": {
							"$ref": "#/definitions/entrySpellcasting_level1to9"
						},
						"9": {
							"$ref": "#/definitions/entrySpellcasting_level1to9"
						}
					},
					"additionalProperties": false
				},
				"hidden": {
					"description": "Allows the above properties to be specified, but not rendered. Useful if e.g. a creature can only cast one spell, and this is rendered in the header line.",
					"type": "array",
					"items": {
						"type": "string",
						"enum": [
							"constant",
							"will",
							"rest",
							"daily",
							"weekly",
							"yearly",
							"ritual",
							"spells"
						]
					}
				},
				"footerEntries": {
					"type": "array",
					"items": {
						"$ref": "#"
					}
				},
				"ability": {
					"type": "string",
					"enum": [
						"str",
						"dex",
						"con",
						"int",
						"wis",
						"cha"
					]
				},
				"displayAs": {
					"description": "Implicitly \"trait\"",
					"type": "string",
					"enum": [
						"trait",
						"action"
					]
				},
				"chargesItem": {
					"type": "string",
					"description": "The UID of an item which provides the charges required to cast any \"charges\" spells."
				}
			},
			"required": [
				"type",
				"name"
			],
			"additionalProperties": false
		},
		"entrySpellcasting_level1to9": {
			"type": "object",
			"properties": {
				"lower": {
					"type": "number"
				},
				"slots": {
					"type": "number"
				},
				"spells": {
					"type": "array",
					"uniqueItems": true,
					"items": {
						"type": "string"
					}
				}
			},
			"required": [
				"spells"
			],
			"additionalProperties": false
		},
		"entrySpellcasting_frequency": {
			"type": "object",
			"properties": {
				"1": {
					"$ref": "#/definitions/_arrayOfSpell"
				},
				"2": {
					"$ref": "#/definitions/_arrayOfSpell"
				},
				"3": {
					"$ref": "#/definitions/_arrayOfSpell"
				},
				"4": {
					"$ref": "#/definitions/_arrayOfSpell"
				},
				"5": {
					"$ref": "#/definitions/_arrayOfSpell"
				},
				"6": {
					"$ref": "#/definitions/_arrayOfSpell"
				},
				"7": {
					"$ref": "#/definitions/_arrayOfSpell"
				},
				"8": {
					"$ref": "#/definitions/_arrayOfSpell"
				},
				"9": {
					"$ref": "#/definitions/_arrayOfSpell"
				},
				"9e": {
					"$ref": "#/definitions/_arrayOfSpell"
				},
				"8e": {
					"$ref": "#/definitions/_arrayOfSpell"
				},
				"7e": {
					"$ref": "#/definitions/_arrayOfSpell"
				},
				"6e": {
					"$ref": "#/definitions/_arrayOfSpell"
				},
				"5e": {
					"$ref": "#/definitions/_arrayOfSpell"
				},
				"4e": {
					"$ref": "#/definitions/_arrayOfSpell"
				},
				"3e": {
					"$ref": "#/definitions/_arrayOfSpell"
				},
				"2e": {
					"$ref": "#/definitions/_arrayOfSpell"
				},
				"1e": {
					"$ref": "#/definitions/_arrayOfSpell"
				}
			},
			"additionalProperties": false
		},
		"entryWrapped": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"type": {
					"type": "string",
					"const": "wrapper"
				},
				"source": {
					"type": "string"
				},
				"page": {
					"$ref": "util.json#/definitions/page"
				},
				"srd": {
					"$ref": "util.json#/definitions/srd"
				},
				"data": {
					"description": "A generic object for storing special data for external use-cases. Keys prefixed with \"rd-\" should be added as \"data-\" HTML attributes when rendering to HTML.",
					"type": "object"
				},
				"id": {
					"type": "string"
				},
				"wrapped": {}
			},
			"required": [
				"type",
				"wrapped"
			],
			"additionalProperties": false
		},
		"dataDamImmune": {
			"oneOf": [
				{
					"$ref": "util.json#/definitions/dataDamageType"
				},
				{
					"type": "object",
					"properties": {
						"special": {
							"type": "string"
						}
					},
					"additionalProperties": false,
					"required": [
						"special"
					]
				},
				{
					"type": "object",
					"properties": {
						"preNote": {
							"type": "string"
						},
						"immune": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/dataDamImmune"
							}
						},
						"note": {
							"type": "string"
						}
					},
					"additionalProperties": false,
					"required": [
						"immune"
					]
				}
			]
		},
		"dataCondImmune": {
			"oneOf": [
				{
					"$ref": "util.json#/definitions/dataCondition"
				},
				{
					"type": "object",
					"properties": {
						"special": {
							"type": "string"
						}
					},
					"additionalProperties": false,
					"required": [
						"special"
					]
				},
				{
					"type": "object",
					"properties": {
						"preNote": {
							"type": "string"
						},
						"conditionImmune": {
							"type": "array",
							"items": {
								"$ref": "util.json#/definitions/dataCondition"
							}
						},
						"note": {
							"type": "string"
						}
					},
					"additionalProperties": false,
					"required": [
						"conditionImmune"
					]
				}
			]
		}
	},
	"anyOf": [
		{
			"$ref": "#/definitions/entrySection"
		},
		{
			"$ref": "#/definitions/entryEntries"
		},
		{
			"$ref": "#/definitions/entryQuote"
		},
		{
			"$ref": "#/definitions/entryInlineEntries"
		},
		{
			"$ref": "#/definitions/entryEntriesInlineEntries"
		},
		{
			"$ref": "#/definitions/entryOptions"
		},
		{
			"$ref": "#/definitions/entryTableGroup"
		},
		{
			"$ref": "#/definitions/entryTable"
		},
		{
			"$ref": "#/definitions/entryTableRow"
		},
		{
			"$ref": "#/definitions/entryTableCell"
		},
		{
			"$ref": "#/definitions/entryList"
		},
		{
			"$ref": "#/definitions/entryBonus"
		},
		{
			"$ref": "#/definitions/entryBonusSpeed"
		},
		{
			"$ref": "#/definitions/entryDice"
		},
		{
			"$ref": "#/definitions/entryAbilityDc"
		},
		{
			"$ref": "#/definitions/entryAbilityAttackMod"
		},
		{
			"$ref": "#/definitions/abilityGeneric"
		},
		{
			"$ref": "#/definitions/entryLink"
		},
		{
			"$ref": "#/definitions/entryOptFeature"
		},
		{
			"$ref": "#/definitions/entryInset"
		},
		{
			"$ref": "#/definitions/entryInsetReadaloud"
		},
		{
			"$ref": "#/definitions/entryVariant"
		},
		{
			"$ref": "#/definitions/entryVariantInner"
		},
		{
			"$ref": "#/definitions/entryVariantSub"
		},
		{
			"$ref": "#/definitions/entryItem"
		},
		{
			"$ref": "#/definitions/entryItemSub"
		},
		{
			"$ref": "#/definitions/entryItemSpell"
		},
		{
			"$ref": "#/definitions/entryImage"
		},
		{
			"$ref": "#/definitions/entryGallery"
		},
		{
			"$ref": "#/definitions/entryActions"
		},
		{
			"$ref": "#/definitions/entryAttack"
		},
		{
			"$ref": "#/definitions/entryDataCreature"
		},
		{
			"$ref": "#/definitions/entryDataSpell"
		},
		{
			"$ref": "#/definitions/entryDataTrapHazard"
		},
		{
			"$ref": "#/definitions/entryDataObject"
		},
		{
			"$ref": "#/definitions/entryDataItem"
		},
		{
			"$ref": "#/definitions/entryRefClassFeature"
		},
		{
			"$ref": "#/definitions/entryRefSubclassFeature"
		},
		{
			"$ref": "#/definitions/entryRefOptionalfeature"
		},
		{
			"$ref": "#/definitions/entryHr"
		},
		{
			"$ref": "#/definitions/entrySpellcasting"
		},
		{
			"$ref": "#/definitions/entryFlowchart"
		},
		{
			"$ref": "#/definitions/entryFlowBlock"
		},
		{
			"$ref": "#/definitions/entryIngredient"
		},
		{
			"$ref": "#/definitions/entryWrapped"
		},
		{
			"type": "string"
		},
		{
			"type": "integer"
		}
	]
}